#!/bin/bash
#
# common functions
#

set -e

HERE="`dirname \"$0\"`"

# assuming we are in the run folder
source "$HERE/../configuration"

function logMacStatus() {
  local address="$1"
  local status="$2"
  logResult device "$address" "$status"
}

function logMacCount() {
  local count="$1"
  logResult network "$(( $count + 1 ))"
}

function logPingSuccess() {
  local address="$1"
  logResult ping "$address" "$PING_SUCCESS"
}

function logPingFailure() {
  local address="$1"
  logResult ping "$address" "$PING_FAILURE"
}

function logWgetSuccess() {
  local address="$1"
  logResult wget "$address" "$WGET_SUCCESS"
}

function logWgetFailure() {
  local address="$1"
  logResult wget "$address" "$WGET_FAILURE"
}

function logResult() {
  local name="$1"
  shift
  local logFile="`logFileNamed \"$name\"`"
  ## try threadsave access to logfile
  (
    local result="`now`"
    for entry in "$@"; do
      local result="$result$SEPARATOR$entry"
    done
    echo "$result"
  ) >> "$logFile"
}

function logFileNamed() {
  local name="$1"
  mkdir -p "$logs"
  echo "$logs/$name$LOG_ENDING"
}

function now() {
  date +"$DATE_FORMAT"
}

function logTracerouteToHost() {
#  local host="$1"
#  local hop="$2"
#  echo "traceroute $TRACEROUTE_OPTIONS -f $2 -m $2 $1 | tail -n 1"
  local output="`traceroute $TRACEROUTE_OPTIONS -f $2 -m $2 $1 | tail -n 1 | tr '*' '_'`"
  logTracerouteResult "$host" $output
}

# log lines like these:
# 1  192.168.43.1  9.930 ms  8.081 ms  5.481 ms
# 2  * * *
function logTracerouteResult() {
  local result="$1 $2"
  shift # host
  shift # hop
  if [ "$1" == '_' ]; then
    local result="$result $TRACEROUTE_TIMEOUT_IP $TRACEROUTE_TIMEOUT_MS"
  else
    local ip="$1"
    shift
    # parse the milliseconds
    local msSum="0"
    local count="0"
    for ms in `echo "$@" | grep -oE '[.]?[0-9]+' | grep -vF '.'`; do
      local msSum="$(( $msSum + $ms ))"
      local count="$(( $count + 1 ))"
    done
    if [ "$count" == 0 ]; then
      local average="$TRACEROUTE_TIMEOUT_MS"
    else
      local average="$(( $msSum / $count ))"
    fi
    local result="$result $ip $average"
  fi
  logResult traceroute $result
}

function formatMAC() {
  tr 'A-Z' 'a-z'
}

